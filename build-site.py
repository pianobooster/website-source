#!/usr/bin/env python3

# Python script to build the pianobooster website
# The following envoronmental variables are used
# PB_GITHUB_IO <path to the pianobooster.github.io project>
# PB_MUSIC_WEB=<path to the build/MusicWeb dir as generated by the makemusic.py script.


from __future__ import absolute_import
from __future__ import print_function
import os
import shutil
import sys, getopt


build_web_dir = "build/site"
temp_dir = "build/temp"


def make_dir(output_dir):
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)


def rm_tree(tree_dir):
    if os.path.isdir(tree_dir):
        shutil.rmtree(tree_dir)


def copy_and_overwrite(from_path, to_path):
    if os.path.exists(to_path):
        shutil.rmtree(to_path)
    shutil.copytree(from_path, to_path)

def execute_command(cmd):
    print(cmd)
    if os.system(cmd) != 0:
        sys.exit("Error in: " + cmd)


def patch_markdown(src_dir, file_name):

    make_dir(temp_dir)

    file_in = open(src_dir + '/' + file_name, 'r')
    file_out = open(temp_dir + '/' + file_name, 'w')
    while True:
        file_line: str = file_in.readline()
        if not file_line:
            break
        if '# Piano Booster Music' in file_line:
            file_line = file_line.replace('# Piano' , '#')
        elif '# Piano Booster' in file_line:
            file_line = file_line.replace('# Piano Booster', '#')
        file_out.write(file_line)

    file_in.close()
    file_out.close()


def create_html(file_name, **kwargs):

    if 'input_name' in kwargs:
        input_name = kwargs['input_name']
    else:
        input_name = f'{file_name}.md'

    if 'toc' in kwargs:
        toc = kwargs['toc']
    else:
        toc = False

    if 'implicit_figures' in kwargs:
        implicit_figures = kwargs['implicit_figures']
    else:
        implicit_figures = False

    cmd = ( f'pandoc  "{input_name}"  --output="{build_web_dir}/{file_name}.html"'
            " --standalone"
            " --to=html"
            " --include-in-header=include/menu-in-header.html"
            " --include-before=include/menu-start.html"
            )

    cmd += ' --from=markdown+raw_html+yaml_metadata_block'
    if implicit_figures == True:
        cmd += '+implicit_figures'
    else:
        cmd += '-implicit_figures'

    if toc == True:
       cmd += ' --toc'

    if os.path.exists(f'{file_name}-header.html'):
        cmd += f' --include-before=\'{file_name}-header.html\''
    if os.path.exists(f'{file_name}-footer.html'):
        cmd += f' --include-after=\'{file_name}-footer.html\''

    cmd += ' --include-after=include/menu-end.html'

    execute_command(cmd)


def run_main(argv):
    update_music = False

    try:
        opts, args = getopt.getopt(argv, "hm", ["help", "music"])
    except getopt.GetoptError:
        print('Error: unknown option (try --help)')
        sys.exit(2)
    for opt, arg in opts:
        if opt in ("-h", "--help"):
            print('usage: build-site.py [flags]')
            print('  -h  --help      Prints this message')
            print('  -m  --music     Update the music pages')
            sys.exit()
        elif opt in ("-m", "--music"):
            update_music = True

    global build_web_dir
    if os.environ.get('PB_GITHUB_IO') is not None:
        build_web_dir = os.environ.get('PB_GITHUB_IO')

    # ZZ TBD shutil.copytree("site-files", build_web_dir, dirs_exist_ok=True)
    shutil.copytree("site-files", build_web_dir, dirs_exist_ok=True)


    if update_music:
        if os.environ.get('PB_MUSIC_WEB') is None:
            print('error PB_MUSIC_WEB evn not set')
            sys.exit()
        else:
            music_web_dir = os.environ.get('PB_MUSIC_WEB')

        if not os.path.isdir(music_web_dir):
            sys.exit("Error missing dir '{0}'\nRun makemusic.py "
                     .format(music_web_dir))

        print('Updating the music pages')

        shutil.copytree(music_web_dir+"/BeginnerCourse", build_web_dir+"/BeginnerCourse", dirs_exist_ok=True)
        shutil.copytree(music_web_dir+"/BoosterMusic", build_web_dir+"/BoosterMusic", dirs_exist_ok=True)

        patch_markdown(music_web_dir, 'Beginner Course.md');
        patch_markdown(music_web_dir, 'Booster Music.md');
        create_html("Beginner Course", input_name=f'{temp_dir}/Beginner Course.md')
        create_html("Booster Music", input_name=f'{temp_dir}/Booster Music.md')


    create_html("index")
    create_html("screenshots", implicit_figures=True)
    create_html("faq", toc=True)
    create_html("music-info", toc=False)
    create_html("download", toc=False)
    create_html("developer-info", toc=False)


if __name__ == "__main__":
    run_main(sys.argv[1:])
